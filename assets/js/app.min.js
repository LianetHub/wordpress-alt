(() => { "use strict"; "undefined" != typeof Fancybox && null !== Fancybox && Fancybox.bind("[data-fancybox]", { dragToClose: !1, closeButton: !1 }), $((function () { const e = { Android: () => /Android/i.test(navigator.userAgent), BlackBerry: () => /BlackBerry/i.test(navigator.userAgent), iOS: () => /iPhone|iPad|iPod/i.test(navigator.userAgent), Opera: () => /Opera Mini/i.test(navigator.userAgent), Windows: () => /IEMobile/i.test(navigator.userAgent), any: function () { return this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows() } }; function t() { e.any() || $(window).width() < 992 ? $("body").removeClass("_pc").addClass("_touch") : $("body").removeClass("_touch").addClass("_pc") } t(), $(window).on("resize", (() => { t() })); let s = null; function i() { const e = $(".product-stats__tab.active"); if (e.length) return e.data("tab"); const t = $(".product-stats__mobile-tab.active"); return t.length ? t.data("tab") : null } function n(e, t = !1) { $(".product-stats__tab, .product-stats__mobile-tab").removeClass("active"), $(".product-stats__block").removeClass("active"); const s = $(`.product-stats__tab[data-tab="${e}"]`), i = $(`.product-stats__mobile-tab[data-tab="${e}"]`), n = $(`.product-stats__block[data-tab-content="${e}"]`), o = n.find(".product-stats__block-content"); s.addClass("active"), n.addClass("active"), i.addClass("active"), window.innerWidth <= 767.98 ? ($(".product-stats__block-content").not(o).slideUp(400), t && o.is(":visible") ? (i.removeClass("active"), o.slideUp(400)) : o.slideDown(400)) : ($(".product-stats__block-content").hide(), o.show()) } $(document).on("click", (e => { const t = $(e.target); if (t.closest(".header__menu-toggler").length && ($(".header").toggleClass("open-menu"), $("body").toggleClass("lock-menu")), t.closest(".faq__item").length) { const e = t.closest(".faq__item"); e.toggleClass("active"), e.find(".faq__item-answer").slideToggle() } if (t.closest(".form__success-close").length) { const e = t.closest(".form__wrapper"), s = e.find(".form__success-block"); e.removeClass("show-success"), s.addClass("hidden") } if (t.is(".seo-text-block__more") && (t.toggleClass("active"), t.prev().toggleClass("full"), t.hasClass("active") ? t.text("Свернуть") : t.text("Читать полностью")), t.is(".products__sidebar .wp-block-heading, .products__sidebar .filter-title") && (t.toggleClass("active"), t.next().slideToggle()), t.closest(".products__filters-caption").length && (t.closest(".products__filters-caption").toggleClass("active"), t.closest(".products__filters-caption").next().slideToggle()), (t.closest(".menu__arrow").length || t.closest(".menu__link").length && t.closest(".menu-item-has-children").length) && t.closest(".menu__item.menu-parent").length) { e.preventDefault(); const s = t.closest(".menu__item"), i = s.find(".submenu"), n = s.hasClass("active"); if ($(".menu__item").removeClass("active"), $(".submenu").removeClass("open"), $(".menu__body").removeClass("active").css("min-height", ""), window.currentResizeHandler && ($(window).off("resize", window.currentResizeHandler), window.currentResizeHandler = null), !n) { s.addClass("active"), i.addClass("open"); const e = i.outerHeight(), t = $(".menu__body"); t.addClass("active").css("min-height", e), window.currentResizeHandler = () => { const e = i.outerHeight(); t.css("min-height", e) }, $(window).on("resize", window.currentResizeHandler) } } if (t.closest(".submenu__close").length) { const e = $(".menu__body"); $(".menu__item").removeClass("active"), $(".submenu").removeClass("open"), e.removeClass("active").css("min-height", ""), s && ($(window).off("resize", s), s = null) } t.is(".product-stats__tab") && n(t.data("tab")), t.is(".product-stats__mobile-tab") && n(t.data("tab"), !0) })); const o = i(); o ? n(o) : window.innerWidth <= 767.98 ? $(".product-stats__block-content").slideUp(0) : $(".product-stats__block-content").hide(), $(window).on("resize", (function () { const e = i(); if (!e) return void (window.innerWidth <= 767.98 ? $(".product-stats__block-content").slideUp(0) : $(".product-stats__block-content").hide()); const t = $(`.product-stats__block[data-tab-content="${e}"]`), s = t.find(".product-stats__block-content"); window.innerWidth <= 767.98 ? ($(".product-stats__block-content").not(s).slideUp(0), $(`.product-stats__mobile-tab[data-tab="${e}"]`).hasClass("active") ? s.slideDown(0) : s.slideUp(0)) : ($(".product-stats__block-content").hide(), t.hasClass("active") && s.show()) })).trigger("resize"); const r = $(".submenu__item"); if (r.length > 0) { const e = $(".submenu__description-block"); r.on("mouseenter", (function () { const t = $(this).index(); $(this).addClass("active").siblings().removeClass("active"), e.removeClass("active"), e.eq(t).addClass("active") })) } if ($(".wp-block-woocommerce-product-filter-checkbox-list").each((function () { const e = $(this); e.find(".wc-block-product-filter-checkbox-list__input:checked").length > 0 && e.slideDown(0) })), $(document).on("change", ".form__file-input", (function () { !function (e) { const t = e[0].files[0], s = e.closest(".form__file"); if (t) { const e = t.name; s.addClass("hidden"); let i = s.next(".form__file-preview"); if (0 === i.length) { i = $('<div class="form__file-preview"></div>'); const e = $('<span class="form__file-text"></span>'), t = $('<button type="button" class="form__file-remove icon-cross" title="Удалить файл"></button>'); i.append(e).append(t), s.after(i) } i.find(".form__file-text").text(e), i.removeClass("hidden") } else s.removeClass("hidden"), s.next(".form__file-preview").remove() }($(this)) })), $(document).on("click", ".form__file-remove", (function () { const e = $(this).closest(".form__file-preview"); e.prev(".form__file").find(".form__file-input").val(""), e.prev(".form__file").removeClass("hidden"), e.remove() })), $(document).on("wpcf7mailsent wpcf7reset", (function (e) { $(".form__file-preview").each((function () { const e = $(this); e.prev(".form__file").find(".form__file-input").val(""), e.prev(".form__file").removeClass("hidden"), e.remove() })) })), $(".industries__slider").length && new Swiper(".industries__slider", { spaceBetween: 8, slidesPerView: 1, loop: !0, navigation: { prevEl: ".industries__slider-prev", nextEl: ".industries__slider-next" }, breakpoints: { 575.98: { spaceBetween: 20, slidesPerView: 2 }, 991.98: { spaceBetween: 30, slidesPerView: 3 } } }), $(".catalog__slider").length && function (e, t) { let s = !1, i = null; function n() { window.innerWidth <= 767.98 ? s || (s = !0, i = new Swiper(".catalog__slider", t)) : s && (i.destroy(), i = null, s = !1) } n(), window.addEventListener("resize", n) }(0, { spaceBetween: 30, slidesPerView: 1, navigation: { prevEl: ".catalog__slider-prev", nextEl: ".catalog__slider-next" } }), $(".cases__tabs-slider").length && new Swiper(".cases__tabs-slider", { spaceBetween: 16, slidesPerView: "auto", initialSlide: $(".cases__tab-btn.active").index(), observeParents: !0, watchSlidesProgress: !0, slideToClickedSlide: !0, navigation: { prevEl: ".cases__tabs-prev", nextEl: ".cases__tabs-next" }, scrollbar: { el: ".cases__tabs-scrollbar", draggable: !0 }, breakpoints: { 575.98: { spaceBetween: 24 } } }), $(".cases__slider-block").length && $(".cases__slider-block").each((function () { const e = $(this), t = e.find(".swiper-slide").length > 2; new Swiper(e[0], { effect: "coverflow", centeredSlides: !0, slidesPerView: "auto", loop: t, speed: 300, coverflowEffect: { rotate: 0, stretch: 255, depth: 120, modifier: 2.75, slideShadows: !1 }, navigation: { nextEl: e.closest(".cases__slider").find(".swiper-button-next")[0], prevEl: e.closest(".cases__slider").find(".swiper-button-prev")[0] }, breakpoints: { 1439.98: { coverflowEffect: { modifier: 3 } } } }) })), $(".clients__slider").length && new Swiper(".clients__slider", { spaceBetween: 8, slidesPerView: 2, navigation: { prevEl: ".clients__slider-prev", nextEl: ".clients__slider-next" }, grid: { rows: 2, fill: "row" }, breakpoints: { 991.98: { slidesPerView: 3, spaceBetween: 20, grid: { rows: 2, fill: "row" } }, 1199.98: { slidesPerView: 4, spaceBetween: 30, grid: { rows: 2, fill: "row" } } } }), $(".reviews__slider").length && new Swiper(".reviews__slider", { spaceBetween: 30, slidesPerView: 1, navigation: { prevEl: ".reviews__slider-prev", nextEl: ".reviews__slider-next" }, breakpoints: { 767.98: { slidesPerView: 2 }, 991.98: { slidesPerView: 3 }, 1199.98: { slidesPerView: 4 } } }), $(".team__slider").length && new Swiper(".team__slider", { spaceBetween: 8, slidesPerView: 2, navigation: { prevEl: ".team__slider-prev", nextEl: ".team__slider-next" }, breakpoints: { 991.98: { slidesPerView: 3, spaceBetween: 20 }, 1199.98: { slidesPerView: 4, spaceBetween: 30 } } }), $(".blog__slider").length && new Swiper(".blog__slider", { spaceBetween: 30, slidesPerView: 1, watchOverflow: !0, navigation: { prevEl: ".blog__slider-prev", nextEl: ".blog__slider-next" }, breakpoints: { 767.98: { slidesPerView: 2 }, 991.98: { slidesPerView: 3 } } }), $(".сertificates__slider").length && new Swiper(".сertificates__slider", { spaceBetween: 30, slidesPerView: 1, navigation: { prevEl: ".сertificates__slider-prev", nextEl: ".сertificates__slider-next" }, breakpoints: { 767.98: { slidesPerView: 2 }, 991.98: { slidesPerView: 3 }, 1199.98: { slidesPerView: 4 } } }), $(".company__gallery-slider").length && new Swiper(".company__gallery-slider", { slidesPerView: 1, navigation: { prevEl: ".company__gallery-prev", nextEl: ".company__gallery-next" } }), $(".recommendation__body").length && $(".recommendation__body").each(((e, t) => { const s = $(t).find(".recommendation__slider")[0], i = $(t).find(".recommendation__prev")[0], n = $(t).find(".recommendation__next")[0]; new Swiper(s, { spaceBetween: 30, slidesPerView: 1, navigation: { prevEl: i, nextEl: n }, breakpoints: { 767.98: { slidesPerView: 2 }, 991.98: { slidesPerView: 3 }, 1199.98: { slidesPerView: 4 } } }) })), $(".product-card__images").length) { const e = $(".product-card__slider")[0], t = $(".product-card__thumbs")[0], s = new Swiper(t, { spaceBetween: 15, slidesPerView: 3, watchSlidesProgress: !0, breakpoints: { 1199.98: { slidesPerView: 4 } } }); new Swiper(e, { navigation: { nextEl: ".product-card__next", prevEl: ".product-card__prev" }, thumbs: { swiper: s } }) } let a = 0; function l() { const e = ($(".header__top").outerHeight() || 0) + ($(".header__body").outerHeight() || 0), t = $(window).scrollTop(); t > a ? t > e && $(".header").addClass("scroll") : t < e && $(".header").removeClass("scroll"), a = t <= 0 ? 0 : t } if (l(), $(window).on("scroll", l), $(window).on("resize", l), $(".header__search .proinput .orig").length) { const e = $(".header__search"), t = $(".header__search .proinput .orig"); t.on("focus", (() => { console.log(t, "focus"), e.addClass("focus") })), t.on("blur", (() => { e.removeClass("focus") })) } class d { constructor(e) { this.$wrapper = $(e), this.$tabButtons = this.$wrapper.find(".tabs__item"), this.$tabContents = this.$wrapper.find(".tab-content"), this.init() } init() { this.$tabButtons.each(((e, t) => { $(t).on("click", (() => this.activateTab(e))) })) } activateTab(e) { this.$tabButtons.removeClass("active"), this.$tabContents.removeClass("active"), this.$tabButtons.eq(e).addClass("active"), this.$tabContents.eq(e).addClass("active") } } $(".tabs-wrapper").each(((e, t) => new d(t))); class c { static openDropdown = null; constructor(e) { this.$select = $(e), this.defaultText = this.$select.find("option:selected").text(), this.selectName = this.$select.attr("name"), this.$options = this.$select.find("option"), this.placeholder = this.$select.data("placeholder") || this.defaultText, this.$dropdown = null, this.initialState = {}, this.init() } init() { this.$select.length && (this.saveInitialState(), this.$select.addClass("hidden"), this.renderDropdown(), this.setupEvents()) } saveInitialState() { const e = this.$select.find("option:selected"); this.initialState = { selectedText: e.text(), selectedValue: e.val() } } renderDropdown() { const e = `\n            <button type="button" class="dropdown__button icon-chevron-down"\n                aria-expanded="false"\n                aria-haspopup="true"\n                ${this.$select.is(":disabled") ? "disabled" : ""}>\n                <span class="dropdown__button-text">${"" === this.$select.find("option:selected").val() ? this.placeholder : this.defaultText}</span>\n            </button>\n        `; this.$dropdown = $(`\n            <div class="dropdown">\n                ${e}\n                <div class="dropdown__body" aria-hidden="true">\n                    <ul class="dropdown__list" role="listbox"></ul>\n                </div>\n            </div>\n        `); const t = this.$dropdown.find(".dropdown__list"); this.$options.each(((e, s) => { const i = $(s), n = i.attr("value"), o = i.text(), r = i.is(":selected"), a = i.is(":disabled"); t.append(`\n                <li role="option"\n                    data-value="${n}"\n                    aria-checked="${r}"\n                    class="dropdown__list-item${r ? " selected" : ""}${a ? " disabled" : ""}"\n                    ${a ? 'aria-disabled="true"' : ""}>\n                    ${o}\n                </li>\n            `) })), this.$select.after(this.$dropdown) } setupEvents() { this.$dropdown.find(".dropdown__button").on("click", (e => { e.stopPropagation(); const t = this.$dropdown.hasClass("visible"); this.toggleDropdown(!t) })), this.$dropdown.find(".dropdown__list-item").on("click", (e => { e.stopPropagation(); const t = $(e.currentTarget); t.hasClass("disabled") || this.selectOption(t) })), $(document).on("click", (e => { this.$dropdown[0].contains(e.target) || this.closeDropdown() })), $(document).on("keydown", (e => { "Escape" === e.key && this.closeDropdown() })), this.$select.closest("form").on("reset", (() => this.restoreInitialState())), new MutationObserver((() => { const e = this.$select.is(":disabled"); this.$dropdown.find(".dropdown__button").prop("disabled", e) })).observe(this.$select[0], { attributes: !0, attributeFilter: ["disabled"] }), new MutationObserver((e => { e.forEach((e => { if ("attributes" === e.type && "disabled" === e.attributeName) { const t = $(e.target), s = t.attr("value"), i = t.is(":disabled"), n = this.$dropdown.find(`.dropdown__list-item[data-value="${s}"]`); n.toggleClass("disabled", i), i ? n.attr("aria-disabled", "true") : n.removeAttr("aria-disabled") } ("attributes" === e.type && "selected" === e.attributeName || "childList" === e.type) && this.syncSelectedOption() })) })).observe(this.$select[0], { childList: !0, subtree: !0, attributes: !0, attributeFilter: ["selected", "disabled"] }) } toggleDropdown(e) { e && c.openDropdown && c.openDropdown !== this && c.openDropdown.closeDropdown(); const t = this.$dropdown.find(".dropdown__body"), s = this.$dropdown.find(".dropdown__list"), i = s[0].scrollHeight > s[0].clientHeight; if (this.$dropdown.toggleClass("visible", e), this.$dropdown.find(".dropdown__button").attr("aria-expanded", e), t.attr("aria-hidden", !e), e) { c.openDropdown = this, this.$dropdown.removeClass("dropdown-top"); const e = t[0].getBoundingClientRect(), n = window.innerHeight; e.bottom > n && this.$dropdown.addClass("dropdown-top"), s.toggleClass("has-scroll", i) } else c.openDropdown === this && (c.openDropdown = null) } closeDropdown() { this.toggleDropdown(!1) } selectOption(e) { const t = e.data("value"), s = e.text(); this.$select.val(t), this.$dropdown.find(".dropdown__list-item").removeClass("selected").attr("aria-checked", "false"), e.addClass("selected").attr("aria-checked", "true"), this.$dropdown.find(".dropdown__button-text").text(s), this.$dropdown.find(".dropdown__button").addClass("selected"), this.$select.trigger("change"), this.closeDropdown() } restoreInitialState() { const e = this.initialState; this.$select.val(e.selectedValue).trigger("change") } syncSelectedOption() { const e = this.$select.find("option:selected"), t = e.val(), s = e.text(), i = this.$dropdown.find(".dropdown__button-text"); "" === t ? (i.text(this.placeholder), this.$dropdown.find(".dropdown__button").removeClass("selected")) : (i.text(s), this.$dropdown.find(".dropdown__button").addClass("selected")), this.$dropdown.find(".dropdown__list-item").removeClass("selected").attr("aria-checked", "false"); const n = this.$dropdown.find(`.dropdown__list-item[data-value="${t}"]`); n.length && n.addClass("selected").attr("aria-checked", "true") } } $(".select").each(((e, t) => { new c(t) })); var p = $('input[type="tel"]'); function _(e) { return e.val().replace(/\D/g, "") } function h(e) { var t = document.cookie.match(new RegExp("(?:^|; )" + e.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") + "=([^;]*)")); return t ? decodeURIComponent(t[1]) : void 0 } p.on("keydown", (function (e) { var t = $(e.target), s = t.val().replace(/\D/g, ""); 8 === e.keyCode && 1 === s.length && t.val("") })), p.on("input", (function (e) { var t = $(e.target), s = _(t), i = e.target.selectionStart, n = ""; s ? t.val().length === i ? (["7", "8", "9"].includes(s[0]) ? ("9" === s[0] && (s = "7" + s), n = ("8" === s[0] ? "8" : "+7") + " ", s.length > 1 && (n += "(" + s.substring(1, 4)), s.length >= 5 && (n += ") " + s.substring(4, 7)), s.length >= 8 && (n += "-" + s.substring(7, 9)), s.length >= 10 && (n += "-" + s.substring(9, 11))) : n = "+" + s.substring(0, 12), t.val(n)) : e.originalEvent && e.originalEvent.data && /\D/g.test(e.originalEvent.data) && t.val(s) : t.val("") })), p.on("paste", (function (e) { var t = $(e.target), s = _(t), i = e.originalEvent.clipboardData || window.clipboardData; if (i) { var n = i.getData("Text"); /\D/g.test(n) && (t.val(s), e.preventDefault()) } })); const w = "user_has_consented_cookies", u = $("#cookie-block"), f = u.find(".cookie__btn"); !u.length || void 0 !== h(w) && "true" == h(w) ? u.length && "true" === h(w) && u.fadeOut(0, (function () { $(this).remove() })) : (u.fadeIn("slow"), f.on("click", (function () { !function (e, t, s) { var i = (s = s || {}).expires; if ("number" == typeof i && i) { var n = new Date; n.setTime(n.getTime() + 1e3 * i), s.expires = n } i && i.toUTCString && (s.expires = i.toUTCString()); var o = e + "=" + (t = encodeURIComponent(t)); for (var r in s) { o += "; " + r; var a = s[r]; !0 !== a && (o += "=" + a) } document.cookie = o }(w, "true", { expires: 31536e3, path: "/" }), u.fadeOut("slow", (function () { $(this).remove() })) }))), $(".article__seo-block").each((function () { const e = $(this), t = e.closest(".article__content").find(".article__sidebar"), s = t.find(".article__navbar-list"); if (0 === t.length) return !0; const i = t.find(".article__navbar-item a"), n = []; if (i.each((function () { const t = $(this).attr("href"), s = e.find(t); s.length && n.push({ id: t.substring(1), $element: s, $navLink: $(this) }) })), n.length <= 1) return !0; const o = new IntersectionObserver(((e, t) => { e.forEach((e => { const t = e.target.id, s = i.filter(`[href="#${t}"]`); if (e.isIntersecting) i.removeClass("active"), s.addClass("active"); else if (e.boundingClientRect.top < 0) { const e = n.findIndex((e => e.id === t)); e + 1 < n.length && n[e + 1].$element[0].getBoundingClientRect().top < .3 * $(window).height() && s.removeClass("active") } })) }), { root: null, rootMargin: "0px 0px -70% 0px", threshold: 0 }); n.forEach((e => { o.observe(e.$element[0]) })), $(window).on("scroll", (function () { const t = e.offset().top, i = e.outerHeight(), n = $(window).scrollTop(), o = $(window).height(), r = t - o; let a = 0; n > r && (a = (n - r) / (t + i - .3 * o - r) * 100, a = Math.min(100, Math.max(0, a))), s.css("--progress-percent", a.toFixed(2) + "%") })).trigger("scroll") })) })) })();